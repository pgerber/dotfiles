#!/usr/bin/python3

#    Print details about errno matching given number, range or description.
#    Copyright (C) 2017  Peter Gerber <peter@arbitrary.ch>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.


import argparse
import errno
import os
import re


def print_errno(code):
    print('{:3} → {:15} → {}'.format(code, errno.errorcode.get(code, '-'), os.strerror(code)))


def process_range(errno_range):
    start, _, end = errno_range.partition('-')
    if end == '':
        numbers = [int(start)]
    else:
        numbers = range(int(start), int(end) + 1)

    for no in numbers:
        print_errno(no)


def process_regex(pattern):
    pattern = re.compile(pattern, re.IGNORECASE)
    for no, symbol in errno.errorcode.items():
        if  pattern.search(symbol) or pattern.search(os.strerror(no)):
            print_errno(no)


def process(errno):
    if re.fullmatch('\d+(-\d+)?', errno):
        process_range(errno)
    else:
        process_regex(errno)


def parse_args():
    parser = argparse.ArgumentParser(description='Print details about errno matching given number, range or description.')
    parser.add_argument('pattern', help='Errno number ("1"), range ("1-15") or case-insensitive 'regular expression that '
                        ' searches in the symbol names and descriptions.')
    return parser.parse_args()


if __name__ == "__main__":
    args = parse_args()
    process(args.pattern)
